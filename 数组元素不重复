#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

template<typename T>
int getLength(T &arr) {
    return sizeof(arr) / sizeof(arr[0]);
}

int main() {
    srand(time(NULL));
    //创建指定数组
    int num[6];
    //创建所需数的存储区
    int allNum[33];
    //循环赋值给所需数存储区
    for (int i = 0; i < 33; ++i) {
        //赋值1-33所有数给所需数存储区
        allNum[i] = i + 1;
    }
    //创建与所需数存储区匹配长度的布尔型数组开关
    bool flags[getLength(allNum)];
    //将数组开关全部设置为关
    for (int j = 0; j < getLength(allNum); ++j) {
        flags[j] = 0;
    }
    for (int k = 0; k < getLength(num); ++k) {
        //创建一个下标变量
        int index;
        do {
            //随机生成下标数
            index = rand() % getLength(allNum);
            //数组开关下标数位的位置为假时，停止循环
        } while (flags[index]);
        //因存储区的数组长度与数组开关的数组长度一样，所以直接使用同一个下标对指定数组赋值
        num[k] = allNum[index];
        //将开关数组下标位的值调整为真，以便循环时可以跳过该下标数的位置
        flags[index] = 1;
        //测试指定数组的元素值是否不再重复
        cout << num[k] << " ";
    }
    return 0;
}
